<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.myweb.first.authority.model.dao.AuthorityDao">

    <!-- 사용자 목록 조회를 위한 resultMap -->
    <resultMap id="userResultMap" type="Member">
        <result property="empId" column="EMPID" />
        <result property="empName" column="EMPNAME" />
        <result property="department" column="DEPARTMENT" />
        <result property="job" column="JOB" />
        <result property="email" column="EMAIL" />
        <result property="phone" column="PHONE" />
        <result property="hireDate" column="HIRE_DATE" />
        <result property="lastLoginDate" column="LAST_LOGIN_DATE" />
        <result property="isActive" column="IS_ACTIVE" />
        <result property="adminYN" column="ADMIN_YN" />
    </resultMap>

    <!-- 전체 사용자 목록 조회 -->
    <select id="selectAllUsers" resultMap="userResultMap">
        SELECT 
            EMPID, EMPNAME, DEPARTMENT, JOB, EMAIL,
            PHONE, HIRE_DATE, LAST_LOGIN_DATE, IS_ACTIVE, ADMIN_YN
        FROM TB_USER
        ORDER BY EMPID ASC
    </select>

    <!-- 검색 조건에 따른 사용자 목록 조회 -->
    <select id="searchUsers" parameterType="map" resultMap="userResultMap">
        SELECT 
            EMPID, EMPNAME, DEPARTMENT, JOB, EMAIL,
            PHONE, HIRE_DATE, LAST_LOGIN_DATE, IS_ACTIVE, ADMIN_YN
        FROM TB_USER
        <where>
            <if test="userName != null and userName != ''">
                AND EMPNAME LIKE '%' || #{userName} || '%'
            </if>
            <if test="department != null and department != ''">
                AND DEPARTMENT = #{department}
            </if>
            <if test="position != null and position != ''">
                AND JOB = #{position}
            </if>
            <if test="role != null and role != ''">
                <choose>
                    <when test="role == '관리자'">
                        AND ADMIN_YN = 'Y'
                    </when>
                    <otherwise>
                        AND ADMIN_YN = 'N'
                    </otherwise>
                </choose>
            </if>
        </where>
        ORDER BY EMPID ASC
    </select>

    <!-- 사용자 상태 변경 -->
    <update id="updateUserStatus" parameterType="map">
        UPDATE TB_USER
        SET IS_ACTIVE = #{status}
        WHERE EMPID = #{empId}
    </update>

    <!-- 사용자 권한 변경 -->
    <update id="updateUserRole" parameterType="map">
        UPDATE TB_USER
        SET ADMIN_YN = #{adminYN}
        WHERE EMPID = #{empId}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="deleteUser" parameterType="string">
        DELETE FROM TB_USER
        WHERE EMPID = #{empId}
    </delete>

    <!-- 전체 사용자 수 조회 -->
    <select id="getTotalUsers" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM TB_USER
        <where>
            <if test="name != null and name != ''">
                AND EMPNAME LIKE '%' || #{name} || '%'
            </if>
            <if test="department != null and department != ''">
                AND DEPARTMENT = #{department}
            </if>
            <if test="position != null and position != ''">
                AND JOB = #{position}
            </if>
            <if test="role != null and role != ''">
                <choose>
                    <when test="role == '관리자'">
                        AND ADMIN_YN = 'Y'
                    </when>
                    <otherwise>
                        AND ADMIN_YN = 'N'
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>
    
    <!-- 페이지별 사용자 목록 조회 -->
    <select id="getUsersByPage" parameterType="map" resultMap="userResultMap">
        SELECT *
        FROM (
            SELECT ROWNUM RNUM, A.*
            FROM (
                SELECT 
                    EMPID, EMPNAME, DEPARTMENT, JOB, EMAIL,
                    PHONE, HIRE_DATE, LAST_LOGIN_DATE, IS_ACTIVE, ADMIN_YN
                FROM TB_USER
                <where>
                    <if test="name != null and name != ''">
                        AND EMPNAME LIKE '%' || #{name} || '%'
                    </if>
                    <if test="department != null and department != ''">
                        AND DEPARTMENT = #{department}
                    </if>
                    <if test="position != null and position != ''">
                        AND JOB = #{position}
                    </if>
                    <if test="role != null and role != ''">
                        <choose>
                            <when test="role == '관리자'">
                                AND ADMIN_YN = 'Y'
                            </when>
                            <otherwise>
                                AND ADMIN_YN = 'N'
                            </otherwise>
                        </choose>
                    </if>
                </where>
                ORDER BY EMPID
            ) A
        )
        WHERE RNUM BETWEEN #{startRow} AND #{endRow}
    </select>

    <!-- 역할 목록 조회 -->
    <select id="selectAllRoles" resultType="org.myweb.first.authority.model.dto.Role">
        SELECT 
            ROLE_GROUP_ID as roleGroupId,
            ROLE_GROUP_NAME as roleGroupName,
            CREATED_AT as createdAt
        FROM TB_ROLE_GROUP
        ORDER BY ROLE_GROUP_ID
    </select>
    
    <!-- 사용자 역할 추가 -->
    <insert id="insertUserRole" parameterType="map">
        INSERT INTO TB_USER_ROLE (USER_ID, ROLE_GROUP_ID)
        VALUES (#{userId}, #{roleGroupId})
    </insert>
    
    <!-- 역할별 사용자 수 조회 -->
    <select id="getUserCountByRole" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM TB_USER_ROLE
        WHERE ROLE_GROUP_ID = #{roleGroupId}
    </select>
    
    <!-- 역할별 권한 수 조회 -->
    <select id="getPermissionCountByRole" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM TB_ROLE_PERMISSION
        WHERE ROLE_GROUP_ID = #{roleGroupId}
    </select>
    
    <!-- 역할별 사용자 목록 조회 -->
    <select id="getUsersByRole" parameterType="string" resultMap="userResultMap">
        SELECT u.EMPID, u.EMPNAME, u.DEPARTMENT, u.JOB, u.EMAIL,
               u.PHONE, u.HIRE_DATE, u.LAST_LOGIN_DATE, u.IS_ACTIVE, u.ADMIN_YN
        FROM TB_USER u
        JOIN TB_USER_ROLE r ON u.EMPID = r.USER_ID
        WHERE r.ROLE_GROUP_ID = #{roleGroupId}
        ORDER BY u.EMPNAME
    </select>
</mapper> 