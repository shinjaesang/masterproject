<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="orderMapper">
	<resultMap id="orderResultMap" type="org.myweb.first.order.model.dto.Order">
		<result property="orderId" column="ORDER_ID" />
		<result property="partnerId" column="PARTNER_ID" />
		<result property="partnerName" column="PARTNER_NAME" />
		<result property="partnerType" column="PARTNER_TYPE" />
		<result property="managerName" column="MANAGER_NAME" />
		<result property="contactInfo" column="CONTACT_INFO" />
		<result property="partnerAddress" column="PARTNER_ADDRESS" />
		<result property="orderType" column="ORDER_TYPE" />
		<result property="orderStatus" column="ORDER_STATUS" />
		<result property="createdAt" column="CREATED_AT" />
		<collection property="items" ofType="org.myweb.first.order.model.dto.OrderItem">
			<result property="orderItemId" column="ORDER_ITEM_ID" />
			<result property="orderId" column="ORDER_ID" />
			<result property="productId" column="PRODUCT_ID" />
			<result property="productCode" column="PRODUCT_CODE" />
			<result property="productName" column="PRODUCT_NAME" />
			<result property="optionValue" column="OPTION_VALUE" />
			<result property="costPrice" column="COST_PRICE" />
			<result property="sellingPrice" column="SELLING_PRICE" />
			<result property="quantity" column="QUANTITY" />
		</collection>
	</resultMap>
	<!-- 주문 목록 조회 -->
	<select id="selectOrderList" parameterType="java.util.Map" resultMap="orderResultMap">
		SELECT 
			o.ORDER_ID,
			o.PARTNER_ID,
			p.PARTNER_NAME,
			p.PARTNER_TYPE,
			o.ORDER_TYPE,
			o.ORDER_STATUS,
			o.CREATED_AT,
			oi.ORDER_ITEM_ID,
			oi.PRODUCT_ID,
			pr.PRODUCT_NAME,
			pr.SELLING_PRICE,
			oi.QUANTITY
		FROM TB_ORDERS o
		LEFT JOIN TB_PARTNER p ON o.PARTNER_ID = p.PARTNER_ID
		LEFT JOIN TB_ORDER_ITEMS oi ON o.ORDER_ID = oi.ORDER_ID
		LEFT JOIN TB_PRODUCT pr ON oi.PRODUCT_ID = pr.PRODUCT_ID
		<where>
			<if test="orderId != null and orderId != ''">
				AND o.ORDER_ID LIKE 'ORD%' || #{orderId} || '%'
			</if>
			<if test="partnerName != null and partnerName != ''">
				AND p.PARTNER_NAME LIKE '%' || #{partnerName} || '%'
			</if>
			<if test="partnerType != null and partnerType != ''">
				AND p.PARTNER_TYPE = #{partnerType}
			</if>
			<if test="orderType != null and orderType != ''">
				AND o.ORDER_TYPE = #{orderType}
			</if>
			<if test="orderStatus != null and orderStatus != ''">
				AND o.ORDER_STATUS = #{orderStatus}
			</if>
			<if test="startDate != null and startDate != ''">
				AND o.CREATED_AT >= TO_DATE(#{startDate}, 'YYYY-MM-DD')
			</if>
			<if test="endDate != null and endDate != ''">
				AND o.CREATED_AT &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
			</if>
			<if test="productName != null and productName != ''">
				AND pr.PRODUCT_NAME LIKE '%' || #{productName} || '%'
			</if>
			<if test="minPrice != null and minPrice != ''">
				AND pr.SELLING_PRICE >= #{minPrice}
			</if>
			<if test="maxPrice != null and maxPrice != ''">
				AND pr.SELLING_PRICE &lt;= #{maxPrice}
			</if>
		</where>
		ORDER BY o.ORDER_ID DESC
	</select>
	<!-- 주문 상세 조회 -->
	<select id="selectOrderById" parameterType="string" resultMap="orderResultMap">
		SELECT 
			o.ORDER_ID, 
			o.PARTNER_ID, 
			p.PARTNER_NAME, 
			p.PARTNER_TYPE, 
			p.MANAGER_NAME, 
			p.CONTACT_INFO, 
			p.PARTNER_ADDRESS,
			o.ORDER_TYPE, 
			o.ORDER_STATUS, 
			o.CREATED_AT,
			oi.ORDER_ITEM_ID,
			oi.PRODUCT_ID, 
			pr.PRODUCT_ID as PRODUCT_CODE,
			pr.PRODUCT_NAME, 
			pr.OPTION_VALUE, 
			pr.COST_PRICE,
			pr.SELLING_PRICE, 
			oi.QUANTITY
		FROM 
			TB_ORDERS o
			LEFT JOIN TB_PARTNER p ON o.PARTNER_ID = p.PARTNER_ID
			LEFT JOIN TB_ORDER_ITEMS oi ON o.ORDER_ID = oi.ORDER_ID
			LEFT JOIN TB_PRODUCT pr ON oi.PRODUCT_ID = pr.PRODUCT_ID
		WHERE 
			o.ORDER_ID = #{orderId}
	</select>
	<!-- 주문 등록 -->
	<insert id="insertOrder" parameterType="Order">
		INSERT INTO TB_ORDERS (
			ORDER_ID, PARTNER_ID, ORDER_TYPE, ORDER_STATUS, CREATED_AT
		) VALUES (
			'ORD' || LPAD(SEQ_ORDERS.NEXTVAL, 3, '0'), #{partnerId}, #{orderType},
			'접수', SYSDATE
		)
		<selectKey keyProperty="orderId" resultType="string" order="AFTER">
			SELECT 'ORD' || LPAD(SEQ_ORDERS.CURRVAL, 3, '0') FROM DUAL
		</selectKey>
	</insert>
	<!-- 주문 항목 등록 -->
	<insert id="insertOrderItem" parameterType="OrderItem">
		INSERT INTO TB_ORDER_ITEMS (
			ORDER_ITEM_ID, ORDER_ID, PRODUCT_ID, QUANTITY
		) VALUES (
			'ORI' || LPAD(SEQ_ORDER_ITEMS.NEXTVAL, 3, '0'),
			#{orderId}, #{productId}, #{quantity}
		)
	</insert>
	<!-- 주문 수정 -->
	<update id="updateOrder" parameterType="Order">
		UPDATE TB_ORDERS 
		SET 
			PARTNER_ID = #{partnerId},
			ORDER_TYPE = #{orderType},
			ORDER_STATUS = #{orderStatus}
		WHERE 
			ORDER_ID = #{orderId}
	</update>
	<!-- 주문 삭제 -->
	<delete id="deleteOrder" parameterType="string">
		DELETE FROM TB_ORDERS
		WHERE ORDER_ID = #{orderId}
	</delete>
	<!-- 주문 상태 변경 -->
	<update id="updateOrderStatus">
		UPDATE TB_ORDERS 
		SET ORDER_STATUS = #{orderStatus}
		WHERE ORDER_ID = #{orderId}
	</update>
	<!-- 주문 수량 조회 -->
	<select id="selectOrderCount" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) 
		FROM TB_ORDERS o
		LEFT JOIN TB_PARTNER p ON o.PARTNER_ID = p.PARTNER_ID
		LEFT JOIN TB_ORDER_ITEMS oi ON o.ORDER_ID = oi.ORDER_ID
		LEFT JOIN TB_PRODUCT pr ON oi.PRODUCT_ID = pr.PRODUCT_ID
		<where>
			<if test="orderId != null and orderId != ''">
				AND o.ORDER_ID LIKE '%' || #{orderId} || '%'
			</if>
			<if test="partnerName != null and partnerName != ''">
				AND p.PARTNER_NAME LIKE '%' || #{partnerName} || '%'
			</if>
			<if test="partnerType != null and partnerType != ''">
				AND p.PARTNER_TYPE = #{partnerType}
			</if>
			<if test="orderType != null and orderType != ''">
				AND o.ORDER_TYPE = #{orderType}
			</if>
			<if test="orderStatus != null and orderStatus != ''">
				AND o.ORDER_STATUS = #{orderStatus}
			</if>
			<if test="startDate != null and startDate != ''">
				AND o.CREATED_AT >= TO_DATE(#{startDate}, 'YYYY-MM-DD')
			</if>
			<if test="endDate != null and endDate != ''">
				AND o.CREATED_AT &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
			</if>
			<if test="productName != null and productName != ''">
				AND pr.PRODUCT_NAME LIKE '%' || #{productName} || '%'
			</if>
			<if test="minPrice != null">
				AND pr.SELLING_PRICE >= #{minPrice}
			</if>
			<if test="maxPrice != null">
				AND pr.SELLING_PRICE &lt;= #{maxPrice}
			</if>
		</where>
	</select>
	<!-- 상품 정보 조회 -->
	<select id="selectProductInfo" parameterType="string" resultType="org.myweb.first.product.model.dto.Product">
		SELECT 
			PRODUCT_ID as productId,
			PRODUCT_NAME as productName,
			OPTION_VALUE as optionValue,
			COST_PRICE as costPrice,
			SELLING_PRICE as sellingPrice
		FROM TB_PRODUCT
		WHERE PRODUCT_ID = #{productId}
	</select>
	<!-- 거래처 목록 조회 -->
	<select id="selectPartnerList" resultType="org.myweb.first.partner.model.dto.Partner">
		SELECT 
			PARTNER_ID as partnerId,
			PARTNER_NAME as partnerName,
			PARTNER_TYPE as partnerType,
			MANAGER_NAME as managerName,
			CONTACT_INFO as contactInfo,
			PARTNER_ADDRESS as partnerAddress
		FROM TB_PARTNER
		ORDER BY PARTNER_NAME
	</select>
	<!-- 선택된 주문 삭제 -->
	<delete id="deleteSelectedOrders" parameterType="java.util.List">
		DELETE FROM TB_ORDERS
		WHERE ORDER_ID IN
		<foreach collection="list" item="orderId" open="(" separator="," close=")">
			#{orderId}
		</foreach>
	</delete>
	<!-- 전체 주문 목록 조회 -->
	<select id="selectAllOrders" resultMap="orderResultMap">
		SELECT 
			o.ORDER_ID,
			o.PARTNER_ID,
			p.PARTNER_NAME,
			o.ORDER_TYPE,
			o.ORDER_STATUS,
			o.CREATED_AT,
			oi.ORDER_ITEM_ID,
			oi.PRODUCT_ID,
			pr.PRODUCT_NAME,
			pr.OPTION_VALUE,
			pr.SELLING_PRICE,
			oi.QUANTITY
		FROM TB_ORDERS o
		LEFT JOIN TB_PARTNER p ON o.PARTNER_ID = p.PARTNER_ID
		LEFT JOIN TB_ORDER_ITEMS oi ON o.ORDER_ID = oi.ORDER_ID
		LEFT JOIN TB_PRODUCT pr ON oi.PRODUCT_ID = pr.PRODUCT_ID
		ORDER BY o.ORDER_ID DESC
	</select>
	<!-- 주문 항목 전체 삭제 -->
	<delete id="deleteOrderItemsByOrderId" parameterType="string">
		DELETE FROM TB_ORDER_ITEMS WHERE ORDER_ID = #{orderId}
	</delete>
</mapper>